defmodule Euler.Question2 do
  @moduledoc """
    This module contains the solution for the 2th question of project Euler

    Question:
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

    https://projecteuler.net/problem=2
  """

  @doc """
    Solves euler problem 2
  """
  def solve() do
    fib_list([2, 1], 4000000)
    |> Enum.filter(fn number -> rem(number, 2) == 0  end)
    |> Enum.sum
  end

  defp fib_list([last, second_last | _tail] = fib_list, max) do
    next_number = last + second_last

    case next_number > max do
        true -> fib_list
        false -> fib_list([next_number] ++ fib_list, max)
    end
  end
end
